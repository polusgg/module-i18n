{
  "extends": [
    "eslint:recommended",
    // "prettier",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "env": {
    "browser": false,
    "node": true
  },
  "parserOptions": {
    "ecmaVersion": 12,
    "sourceType": "module",
    "ecmaFeatures": {},
    "project": "tsconfig.json"
  },
  "parser": "@typescript-eslint/parser",
  // "plugins": ["@typescript-eslint", "import"],
  "plugins": [
    "@typescript-eslint",
    "eslint-plugin-tsdoc"
  ],
  "rules": {
    "tsdoc/syntax": "error",
    // "prettier/prettier": "error",
    "no-empty": ["error", {
      "allowEmptyCatch": true
    }],
    "no-extra-parens": "off",
    // "@typescript-eslint/no-extra-parens": [2, "all", {
    //   "nestedBinaryExpressions": false
    // }],
    "no-template-curly-in-string": "error",
    "no-unreachable-loop": "error",
    "no-unsafe-negation": ["error", {
      "enforceForOrderingRelations": true
    }],
    "array-callback-return": "error",
    "block-scoped-var": "error",
    // "curly": ["error", "multi-line", "consistent"],
    "curly": ["error", "all"],
    "default-case": "off",
    "default-case-last": "error",
    "default-param-last": "off",
    "@typescript-eslint/default-param-last": "error",
    "dot-location": ["error", "property"],
    "dot-notation": "off",
    "@typescript-eslint/dot-notation": ["error", {
      "allowKeywords": true
    }],
    "grouped-accessor-pairs": ["error", "getBeforeSet"],
    "guard-for-in": "error",
    "no-case-declarations": "error",
    "no-constructor-return": "error",
    "no-else-return": ["error", {
      "allowElseIf": false
    }],
    "no-floating-decimal": "error",
    "no-loop-func": "off",
    "@typescript-eslint/no-loop-func": "error",
    "no-multi-spaces": ["error", {
      "exceptions": {
        "Property": false
      }
    }],
    "no-new": "error",
    "no-new-wrappers": "error",
    "no-return-assign": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-throw-literal": "off",
    "@typescript-eslint/no-throw-literal": "error",
    "no-unmodified-loop-condition": "error",
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": ["error", {
      "allowShortCircuit": true,
      "allowTernary": true
    }],
    "no-useless-call": "error",
    "no-useless-catch": "error",
    "no-useless-concat": "error",
    "no-useless-return": "error",
    "prefer-promise-reject-errors": "error",
    "radix": "error",
    "require-await": "off",
    "@typescript-eslint/require-await": "error",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error", {
      "builtinGlobals": false,
      "hoist": "never"
    }],
    "no-shadow-restricted-names": "error",
    "no-undef": ["error", {
      "typeof": true
    }],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "error",
    "array-bracket-newline": ["error", "consistent"],
    "array-bracket-spacing": ["error", "never"],
    "block-spacing": "error",
    "brace-style": "off",
    "@typescript-eslint/brace-style": ["error", "1tbs", {
      "allowSingleLine": true
    }],
    "comma-dangle": "off",
    "@typescript-eslint/comma-dangle": ["error", "always-multiline", {
      "arrays": "always-multiline",
      "objects": "always-multiline",
      "imports": "always-multiline",
      "exports": "always-multiline",
      "functions": "always-multiline"
    }],
    "comma-spacing": "off",
    "@typescript-eslint/comma-spacing": ["error", {
      "before": false,
      "after": true
    }],
    "comma-style": ["error", "last"],
    "computed-property-spacing": ["error", "never"],
    "eol-last": ["error", "always"],
    "func-call-spacing": "off",
    "@typescript-eslint/func-call-spacing": ["error", "never"],
    "func-names": ["error", "always"],
    "implicit-arrow-linebreak": ["error", "beside"],
    "indent": "off",
    "@typescript-eslint/indent": ["error", 2, {
      "SwitchCase": 1
    }],
    "key-spacing": ["error", {
      "beforeColon": false,
      "afterColon": true,
      "mode": "strict"
    }],
    "keyword-spacing": "off",
    "@typescript-eslint/keyword-spacing": ["error", {
      "before": true,
      "after": true
    }],
    "line-comment-position": ["error", {
      "position": "above"
    }],
    "linebreak-style": ["error", "unix"],
    "lines-around-comment": ["error", {
      "beforeBlockComment": false,
      "afterBlockComment": false,
      "beforeLineComment": false,
      "afterLineComment": false,
      "allowBlockStart": true,
      "allowBlockEnd": true,
      "allowObjectStart": true,
      "allowObjectEnd": true,
      "allowArrayStart": true,
      "allowArrayEnd": true,
      "allowClassStart": true,
      "allowClassEnd": true,
      "applyDefaultIgnorePatterns": true
    }],
    "lines-between-class-members": "off",
    "@typescript-eslint/lines-between-class-members": ["error", "always", {
      "exceptAfterSingleLine": true
    }],
    // "multiline-comment-style": ["error", "starred-block"],
    "multiline-ternary": ["error", "always-multiline"],
    "new-cap": ["error", {
      "newIsCap": true,
      "capIsNew": true,
      "properties": true
    }],
    "newline-per-chained-call": ["error", {
      "ignoreChainWithDepth": 3
    }],
    "no-array-constructor": "off",
    "@typescript-eslint/no-array-constructor": "error",
    "no-inline-comments": "error",
    "no-lonely-if": "error",
    "no-mixed-operators": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-multiple-empty-lines": ["error", {
      "max": 1,
      "maxEOF": 1
    }],
    "@typescript-eslint/no-non-null-assertion": "off",
    "no-new-object": "error",
    "no-tabs": ["error", {
      "allowIndentationTabs": false
    }],
    "no-trailing-spaces": "error",
    "no-unneeded-ternary": "error",
    "no-whitespace-before-property": "error",
    "nonblock-statement-body-position": ["error", "beside"],
    "object-curly-newline": ["error", {
      "consistent": true
    }],
    "object-curly-spacing": ["error", "always"],
    "object-property-newline": ["error", {
      "allowAllPropertiesOnSameLine": true
    }],
    "operator-assignment": ["error", "always"],
    "padded-blocks": ["error", "never"],
    "padding-line-between-statements": ["error",
      { "blankLine": "always", "prev": "*", "next": ["return", "try", "for", "do", "export", "function", "if", "switch", "while"] },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      { "blankLine": "always", "prev": "*", "next": ["const", "let", "var"] },
      { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] },
      {
        "blankLine": "always",
        "prev": ["class", "do", "export", "for", "function", "if", "switch", "try", "while"],
        "next": ["class", "do", "export", "for", "function", "if", "switch", "try", "while"]
      }
    ],
    "prefer-exponentiation-operator": "error",
    "quote-props": ["error", "as-needed", {
      "keywords": true,
      "numbers": true
    }],
    "quotes": "off",
    "@typescript-eslint/quotes": ["error", "double", {
      "allowTemplateLiterals": true
    }],
    "semi": "off",
    "@typescript-eslint/semi": ["error", "always", {
      "omitLastInOneLineBlock": true
    }],
    "semi-spacing": ["error", {
      "before": false,
      "after": true
    }],
    "semi-style": ["error", "last"],
    "space-before-blocks": "error",
    "space-before-function-paren": "off",
    "@typescript-eslint/space-before-function-paren": ["error", {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always"
    }],
    "space-in-parens": ["error", "never"],
    "space-infix-ops": "off",
    "@typescript-eslint/space-infix-ops": "error",
    "space-unary-ops": ["error", {
      "words": true,
      "nonwords": false
    }],
    "switch-colon-spacing": ["error", {
      "after": true,
      "before": false
    }],
    "arrow-body-style": ["error", "as-needed"],
    "arrow-parens": ["error", "as-needed"],
    "arrow-spacing": ["error", {
      "before": true,
      "after": true
    }],
    "generator-star-spacing": ["error", {
      "before": true,
      "after": true
    }],
    // "no-confusing-arrow": ["error", {
    //   "allowParens": true
    // }],
    "no-duplicate-imports": "error",
    "@typescript-eslint/no-duplicate-imports": ["error", {
      "includeExports": true
    }],
    "no-useless-computed-key": ["error", {
      "enforceForClassMembers": true
    }],
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    "rest-spread-spacing": ["error", "never"],
    // "order": ["error"],
    "@typescript-eslint/no-inferrable-types": ["error", {
      "ignoreParameters": true
    }],
    "symbol-description": "error",
    "template-curly-spacing": "error",
    "yield-star-spacing": ["error", "both"],
    "@typescript-eslint/restrict-template-expressions": ["error", {
      "allowNumber": true,
      "allowBoolean": true,
      "allowAny": true,
      "allowNullish": true
    }],
    "@typescript-eslint/array-type": ["error", {
      "default": "array",
      "readonly": "array"
    }],
    "@typescript-eslint/class-literal-property-style": ["error", "getters"],
    "@typescript-eslint/consistent-type-assertions": ["error", {
      "assertionStyle": "as",
      "objectLiteralTypeAssertions": "never"
    }],
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-member-accessibility": ["error", {
      "accessibility": "no-public",
      "overrides": {
        "constructors": "off",
        "properties": "explicit",
        "parameterProperties": "explicit"
      }
    }],
    "@typescript-eslint/member-delimiter-style": ["error", {
      "multiline": {
        "delimiter": "semi",
        "requireLast": true
      },
      "singleline": {
        "delimiter": "semi",
        "requireLast": false
      }
    }],
    "@typescript-eslint/member-ordering": ["error", {
      "default": [
        // Index signature
        "signature",

        // Fields
        "public-static-field",
        "public-decorated-field",
        "public-instance-field",
        "public-abstract-field",
        "public-field",
        "static-field",

        "protected-static-field",
        "protected-decorated-field",
        "protected-instance-field",
        "protected-abstract-field",
        "protected-field",
        "instance-field",

        "private-static-field",
        "private-decorated-field",
        "private-instance-field",
        "private-abstract-field",
        "private-field",
        "abstract-field",
        "decorated-field",

        "field",

        // Constructors
        "public-constructor",
        "protected-constructor",
        "private-constructor",

        "constructor",

        // Methods
        "public-static-method",
        "public-abstract-method",
        "public-decorated-method",
        "public-instance-method",
        "public-method",

        "protected-static-method",
        "protected-abstract-method",
        "protected-decorated-method",
        "protected-instance-method",
        "protected-method",

        "private-static-method",
        "private-abstract-method",
        "private-decorated-method",
        "private-instance-method",
        "private-method",

        "static-method",
        "instance-method",
        "abstract-method",
        "decorated-method",

        "method"
      ]
    }],
    "@typescript-eslint/method-signature-style": ["error", "method"],
    "camelcase": "off",
    "@typescript-eslint/naming-convention": ["error",
      {
        "selector": "default",
        "format": ["camelCase"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": "variableLike",
        "format": ["camelCase", "UPPER_CASE"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": "enumMember",
        "format": ["PascalCase"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      }
    ],
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-extraneous-class": ["error", {
      "allowConstructorOnly": true,
      "allowEmpty": false,
      "allowStaticOnly": true,
      "allowWithDecorator": false
    }],
    "@typescript-eslint/no-invalid-void-type": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": ["error", {
      "allowConstantLoopConditions": true
    }],
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    // "@typescript-eslint/prefer-literal-enum-member": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-readonly": ["error", {
      "onlyInlineLambdas": false
    }],
    // "@typescript-eslint/prefer-ts-expect-error": "error",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/require-array-sort-compare": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/type-annotation-spacing": ["error", {
      "before": false,
      "after": true,
      "overrides": {
        "arrow": {
          "before": true,
          "after": true
        }
      }
    }],
    "@typescript-eslint/typedef": ["error", {
      "parameter": true,
      "propertyDeclaration": true
    }],
    "@typescript-eslint/unified-signatures": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error", {
      "argsIgnorePattern": "^_",
      "ignoreRestSiblings": true
    }]
  },
  "reportUnusedDisableDirectives": true,
  "globals": {
    "NodeJS": "readonly"
  }
}
